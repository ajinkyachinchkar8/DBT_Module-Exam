/*Section I Question:1*/

create database exam;
use exam;

Create table DEPT2 
(
DEPTNO int,
DNAME varchar(15),
LOC varchar(10)
);

desc DEPT2;

insert into  DEPT2 values
('10','ACCOUNTING','NEW YORK'),
('20','RESEARCH','DALLAS'),
('30','SALES','CHICAGO'),
('40','OPERATIONS','BOSTON');

select * from DEPT2;


/*Section I Question:2*/

Create table EMP3
(
EMPNO int,
ENAME varchar(10),
JOB varchar(9),
HIREDATE date,
SAL float,
COMM float,
DEPTNO int
);

desc EMP3;

insert into EMP3 values
('7839','KING','MANAGER','1991-11-17',5000,NULL,'10'),
('7698','BLAKE','CLERK','1981-05-01',2850,NULL,'30'),
('7782','CLARK','MANAGER','1981-06-09',2450,NULL,'10'),
('7566','JONES','CLERK','1981-04-02',2975,NULL,'20'),
('7654','MARTIN','SALESMAN','1981-09-28',1250,1400,'30'),
('7499','ALLEN','SALESMAN','1981-02-20',1600,300,'30');

select * from EMP3;

select sal from emp3
where sal between 2500 and 5000;

select ename  from emp3
order by ename desc;

select lower(job)  from emp3;

select length(ename) from emp3;

select ename,dname from emp3,dept2
where dept2.deptno=emp3.deptno;

select sal,sal*0.2 "HRA" from emp3;



/*Section II Question:1*/
/*Write a stored procedure by the name of PROC1 that accepts two varchar strings
as parameters. Your procedure should then determine if the first varchar string 
exists inside the varchar string. For example, if string1 = ‘DAC’ and string2 = 
‘CDAC, then string1 exists inside string2. The stored procedure should insert the 
appropriate message into a suitable TEMPP output table. Calling program for the 
stored procedure need not be written.*/

create table tempp
(
fir varchar(15),
sec varchar(15)
);

select * from tempp;

delimiter //
create procedure PROC1(x varchar(15))
begin
if substring('DAC',x) then
 insert into tempp values(x,'inside');
 else 
 insert into tempp values(x,'not inside');
 end if;
 end; //
 delimiter ;
 call PROC1('CDAC');
 
 select * from tempp;
 
 
 
 /*Section II Question:2*/
 /*Create a stored function by the name of FUNC1 to take three parameters, the 
sides of a triangle. The function should return a Boolean value:- TRUE if the 
triangle is valid, FALSE otherwise. A triangle is valid if the length of each side is 
less than the sum of the lengths of the other two sides. Check if the dimensions 
entered can form a valid triangle. Calling program for the stored function need not 
be written*/


delimiter //
create function FUNC1(x int,y int,z int)
returns boolean
deterministic
begin 
if x<y+z and y<x+z and z<x+y then
   return true;
else 
   return false;
 end if;
 end; //
 delimiter ;
 
 
 delimiter //
 create procedure msd()
 begin
 if FUNC1(6,8,10) then 
  insert into tempp values('valid','ok');
  else
  insert into tempp values('invalid','not ok');
  end if;
  end; //
  delimiter ;
   call msd();
   
   select * from tempp;
   
